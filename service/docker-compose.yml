services: 
  db:
    container_name: ms4me_postgres
    image: postgres:17.5
    restart: on-failure
    ports: 
      - 127.0.0.1:15021:5432
    environment: 
      - POSTGRES_USER=ms4me
      - POSTGRES_PASSWORD=p4ssw0rd
      - POSTGRES_DB=ms4me
    volumes:
      - ./volumes/postgres_data:/var/lib/postgresql/data
      - ./migrations/001_init_tables.sql:/docker-entrypoint-initdb.d/001_init_tables.sql:ro
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "ms4me", "-d", "ms4me", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
  
  redis:
    image: redis:latest
    container_name: ms4me_redis
    ports:
      - 127.0.0.1:15020:6379
    volumes:
      - ./volumes/redis_data:/data
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: on-failure
  
  game:
    container_name: ms4me_game
    build:
      context: game-srv
      dockerfile: ../deploy/game.Dockerfile
    ports:
      - 127.0.0.1:15003:15003
    environment:
      - ENV=local
      - HOST=0.0.0.0
      - PORT=15003
      - TIMEOUT=4s
      - IDLE_TIMEOUT=60s
      - CORS_ORIGINS=http://localhost:5173,http://127.0.0.1:5173,https://localhost:5173,https://127.0.0.1:5173
      - CORS_METHODS=GET,POST,PUT,PATCH,DELETE,OPTIONS,HEAD

      - DB_HOST=db
      - DB_PORT=5432
      - DB_USERNAME=ms4me
      - DB_NAME=ms4me
      - DB_PASSWORD=p4ssw0rd

      - JWT_SECRET=12345
      - JWT_TTL=24h

      - INGAME_HOST=ingame
      - INGAME_PORT=15005

      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_USERNAME=
      - REDIS_PASSWORD=
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "http://127.0.0.1:15003/api/v1/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
  
  ingame:
    container_name: ms4me_ingame
    build:
      context: ingame-srv
      dockerfile: ../deploy/ingame.Dockerfile
    ports:
      - 127.0.0.1:15005:15005
    environment:
      - ENV=local

      - APP_HOST=0.0.0.0
      - APP_PORT=15005
      - APP_WS_PING_TIMEOUT=20s
      - APP_JWT_SECRET=12345
      - APP_HTTP_TIMEOUT=4s
      - APP_HTTP_IDLE_TIMEOUT=60s
      - APP_CORS_ORIGINS=http://localhost:5173,http://127.0.0.1:5173,https://localhost:5173,https://127.0.0.1:5173
      - APP_CORS_METHODS=GET,POST,PATCH,DELETE,OPTIONS

      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_USERNAME=
      - REDIS_PASSWORD=

      - GAME_HOST=game
      - GAME_PORT=15003
    restart: on-failure
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "http://127.0.0.1:15005/api/v1/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  frontend:
    container_name: ms4me_frontend
    build:
      context: ./game_front
      dockerfile: Dockerfile
    ports:
      - 80:80
    restart: on-failure
    depends_on:
      game:
        condition: service_healthy
      ingame:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "http://127.0.0.1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s